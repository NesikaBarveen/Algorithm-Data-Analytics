# -*- coding: utf-8 -*-
"""SVM_POLYNOMIAL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d5HyFd7cLa1gNVH7BXLH91Fdv7hjcE0G
"""

from matplotlib import pyplot as plt
import numpy as np

x=np.linspace(-5.0, 5.0, 100)
y=np.sqrt(10**2 - x**2)
y=np.hstack([y,-y])
x=np.hstack([x,-x])

x1 = np.linspace(-5.0, 5.0, 100)
y1 = np.sqrt(5**2 - x1**2)
y1=np.hstack([y1,-y1])
x1=np.hstack([x1,-x1])

plt.scatter(y,x)
plt.scatter(y1,x1)

import pandas as pd
df1 = pd.DataFrame(np.vstack([y,x]).T,columns=['X1','X2'])
df1['Y']=0
df2 = pd.DataFrame(np.vstack([y1,x1]).T,columns=['X1','X2'])
df2['Y']=1
df = pd.concat([df1,df2],ignore_index=True)
df.head(7)

x=df.iloc[:, :2]
y=df.Y

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

y_train

from sklearn.svm import SVC
classifier = SVC(kernel = 'rbf', random_state = 0)
classifier.fit(x_train, y_train)

from sklearn.metrics import accuracy_score
y_pred = classifier.predict(x_test)
accuracy_score(y_test, y_pred)

df.head(10)

df['X1_Square']=df['X1']**2
df['X2_Square']=df['X2']**2
df['X1+X2']=df['X1']*df['X2']
df.head(5)

# independent and dependent features
x=df[['X1','X2','X1_Square','X2_Square','X1+X2']]
y=df['Y']

y

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)
x_train

import plotly.express as px
fig = px.scatter_3d(df,x='X1', y ='X2', z='X1+X2',color='Y')
fig.show()

fig =px.scatter_3d(df,x='X1_Square',y='X2_Square',z='X1+X2',color='Y')
fig.show()

classifier=SVC(kernel= 'linear')
classifier.fit(x_train,y_train)
y_pred = classifier.predict(x_test)
accuracy_score(y_test,y_pred)

